---
- name: ecr-repo
  ecs_ecr: name=cogknit
  register: repo

- set_fact:
   repo_uri: "{{ repo.repository.repositoryUri }}"

- debug:
    var: repo_uri

- name: Create task definition
  ecs_taskdefinition:
    region: ap-south-1
    family: cogknit
    aws_access_key: "{{ ACCESS_KEY_ID }}"
    aws_secret_key: "{{ SECRET_ACCESS_KEY }}"
    launch_type: FARGATE
    network_mode: awsvpc
    execution_role_arn: arn:aws:iam::789280659725:role/ecsTaskExecutionRole
    cpu: 256
    memory: 512
    containers:
    - name: cogknit
      cpu: 10
      essential: true
      image: 789280659725.dkr.ecr.ap-south-1.amazonaws.com/cogknit:latest  #{{ repo_uri }}:latest  #:{{ tag }}
      memory: 300
      portMappings:
      - containerPort: 8080
        hostPort: 8080
    state: present
  register: td_out    

- debug:
    var: td_out

- set_fact:
   td_family_name: "{{ td_out.taskdefinition.family }}"

- ecs_cluster:
    name: my-cluster
    state: present
    region: ap-south-1
    aws_access_key: "{{ ACCESS_KEY_ID }}"
    aws_secret_key: "{{ SECRET_ACCESS_KEY }}"
  register: cluster_out

- set_fact:
   clu_name: "{{ cluster_out.cluster.clusterName }}"

- ecs_service:
    state: present
    name: my-service
    cluster: "{{ clu_name }}"
    task_definition: "{{ td_family_name }}"
    region: ap-south-1
    desired_count: 1
    aws_access_key: "{{ ACCESS_KEY_ID }}"
    aws_secret_key: "{{ SECRET_ACCESS_KEY }}"
    launch_type: FARGATE
    load_balancers: 
      - containerName: 'cogknit'
        containerPort: 8080
        targetGroupArn: "{{ tg_arn }}"
    network_configuration:
      subnets:
      - "{{ pb_sub_1 }}" 
      - "{{ pb_sub_1 }}"
      security_groups:
      - "{{ sg }}"
      assign_public_ip: yes
    deployment_configuration:
      minimum_healthy_percent: 75
      maximum_percent: 150
